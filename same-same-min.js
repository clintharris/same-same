// same-same 0.0.0
// But different. Recursively deep equality checking + optional ability to ignore certain properties, order of arrays contents, or order of properties in objects.
// Source code and documentation available at http://github.com/clintharris/same-same.git
// Copyright (c) 2012 Clint Harris
// Freely distributable under MIT license. For full license see http://github.com/clintharris/same-same/raw/master/LICENSE
// Depends on Underscore.js (tested with v1.2.x): http://documentcloud.github.com/underscore/
((function(){var a=this,b,c=undefined;typeof exports!="undefined"?(c=require("underscore"),b=exports):(c=a._,a.Same=b={});if(c===undefined)throw new Error("Missing Underscore library dependency. See http://documentcloud.github.com/underscore/");b.same=function(a,b,f){f=f||{};var g=f.logFcn||function(){};if(c.isArray(a)&&c.isArray(b))return d(a,b,f);if(typeof a=="object"&&typeof b=="object")return e(a,b,f);var h=a==b;return h||g("Inequality: "+JSON.stringify(a)+" ("+typeof a+")"+" != "+JSON.stringify(b)+" ("+typeof b+")"),h};var d=function(a,d,e){e=e||{};var f=e.logFcn||function(){};if(a.length!=d.length)return f("Inequality: arrays have differing lengths"),!1;if(!e.strictArrOrder)var g=function(a){return i(a)?a:JSON.stringify(h(a))},a=c.sortBy(a,g),d=c.sortBy(d,g);for(var j=0;j<a.length;j++)if(!b.same(a[j],d[j],e))return!1;return!0},e=function(a,d,e){e=e||{};var g=e.logFcn||function(){};e.ignorePaths&&c.isArray(e.ignorePaths)&&(e.ignorePaths=f(e.ignorePaths));var h=e.strictObjPropsOrder?c.keys(a):c.keys(a).sort(),i=e.strictObjPropsOrder?c.keys(d):c.keys(d).sort();e.ignorePaths?(h=j(h,e.ignorePaths),i=j(i,e.ignorePaths)):e.ignorePaths={},g("Comparing properties. obj1: "+h+" obj2: "+i);if(h.length!==i.length)return g("Inequality: Objects have differing number of properties"),g("obj1: "+JSON.stringify(a)+" obj2:"+JSON.stringify(d)),!1;for(var k=0;k<h.length;k++){var l=h[k],m=i[k];if(l!=m)return g("Inequality: Objects have different properties or properties in differing order."),g("obj1: "+JSON.stringify(a)+" obj2:"+JSON.stringify(d)),!1;var n=c.clone(e);n.ignorePaths={},e.ignorePaths[l]!=undefined&&e.ignorePaths[l]!=null&&(n.ignorePaths=e.ignorePaths[l]);var o=b.same(a[l],d[m],n);if(!o)return!1}return!0},f=function(a){var b=null;for(var c=0;c<a.length;c++)b==null?b=g(a[c]):g(a[c],b);return b},g=function(a,b){if(a==null||a=="")return null;b=b||{};var c=a.split("."),d=c.splice(0,1);return b[d]=g(c.join(".")),b},h=function(a){var b={},d=c.keys(a).sort();for(var e=0;e<d.length;e++){var f=d[e];b[f]=a[f]}return b},i=function(a){return c.isString(a)||c.isNumber(a)||c.isBoolean(a)||c.isDate(a)},j=function(a,b){var d=[];for(ignoreProperty in b)b[ignoreProperty]==null&&d.push(ignoreProperty);return c.difference(a,d)}})).call(this)